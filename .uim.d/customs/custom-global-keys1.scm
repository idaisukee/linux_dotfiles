(define generic-on-key '("scroll-lock"))
(define generic-on-key? (make-key-predicate '("scroll-lock")))
(define generic-off-key '("scroll-lock"))
(define generic-off-key? (make-key-predicate '("scroll-lock")))
(define generic-begin-conv-key '(" " "Henkan_Mode"))
(define generic-begin-conv-key? (make-key-predicate '(" " "Henkan_Mode")))
(define generic-commit-key '("<IgnoreCase><Control>j" generic-return-key))
(define generic-commit-key? (make-key-predicate '("<IgnoreCase><Control>j" generic-return-key?)))
(define generic-cancel-key '("escape" "<Control>[" "<IgnoreCase><Control>g"))
(define generic-cancel-key? (make-key-predicate '("escape" "<Control>[" "<IgnoreCase><Control>g")))
(define generic-next-candidate-key '("<IgnoreCase><Control>n" "tab" "Henkan_Mode" " " "down"))
(define generic-next-candidate-key? (make-key-predicate '("<IgnoreCase><Control>n" "tab" "Henkan_Mode" " " "down")))
(define generic-prev-candidate-key '("<IgnoreCase><Control>p" "<Shift>tab" "<Shift>Henkan_Mode" "<Shift> " "up"))
(define generic-prev-candidate-key? (make-key-predicate '("<IgnoreCase><Control>p" "<Shift>tab" "<Shift>Henkan_Mode" "<Shift> " "up")))
(define generic-next-page-key '("next"))
(define generic-next-page-key? (make-key-predicate '("next")))
(define generic-prev-page-key '("prior"))
(define generic-prev-page-key? (make-key-predicate '("prior")))
