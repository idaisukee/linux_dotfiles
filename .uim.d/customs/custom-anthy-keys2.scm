(define anthy-on-key '("zenkaku-hankaku" "<Control> " "hiragana-katakana"))
(define anthy-on-key? (make-key-predicate '("zenkaku-hankaku" "<Control> " "hiragana-katakana")))
(define anthy-off-key '(generic-off-key))
(define anthy-off-key? (make-key-predicate '(generic-off-key?)))
(define anthy-begin-conv-key '(" " "Henkan_Mode"))
(define anthy-begin-conv-key? (make-key-predicate '(" " "Henkan_Mode")))
(define anthy-commit-key '(generic-commit-key))
(define anthy-commit-key? (make-key-predicate '(generic-commit-key?)))
(define anthy-cancel-key '(generic-cancel-key))
(define anthy-cancel-key? (make-key-predicate '(generic-cancel-key?)))
(define anthy-next-candidate-key '("<IgnoreCase><Control>n" " " "tab" "down" "Henkan_Mode"))
(define anthy-next-candidate-key? (make-key-predicate '("<IgnoreCase><Control>n" " " "tab" "down" "Henkan_Mode")))
(define anthy-prev-candidate-key '("<IgnoreCase><Control>p" "<Shift> " "<Shift>tab" "up" "<Shift>Henkan_Mode"))
(define anthy-prev-candidate-key? (make-key-predicate '("<IgnoreCase><Control>p" "<Shift> " "<Shift>tab" "up" "<Shift>Henkan_Mode")))
(define anthy-next-page-key '(generic-next-page-key))
(define anthy-next-page-key? (make-key-predicate '(generic-next-page-key?)))
(define anthy-prev-page-key '(generic-prev-page-key))
(define anthy-prev-page-key? (make-key-predicate '(generic-prev-page-key?)))
