// Place your key bindings in this file to overwrite the defaults
[
    // cursor

    {
      "key": "ctrl+a",
      "command": "cursorHome",
      "when": "editorFocus"
    },
    {
        "key": "ctrl+a",
        "command": "-editor.action.selectAll"
    },
{
    "key": "shift+home",
    "command": "cursorEnd"
},
    {
        "key": "ctrl+a",
        "command": "cursorHome",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+a",
        "command": "list.focusFirst",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+a",
        "command": "cursorLineStart",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+o",
        "command": "cursorPageDown",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+o",
        "command": "cursorBottom",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+e",
        "command": "cursorPageUp",
        "when": "editorTextFocus"
    },
    {
             "key": "ctrl+shift+e",
        "command": "cursorTop",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+u",
        "command": "cursorEnd",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+d",
        "command": "cursorLeft",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+h",
        "command": "cursorDown",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+t",
        "command": "cursorUp",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+n",
        "command": "cursorRight",
        "when": "editorTextFocus"
    },

    // editing

    {
        "key": "ctrl+b",
        "command": "deleteLeft",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+r",
        "command": "deleteRight"
    },
    {
        "key": "ctrl+,",
        "command": "editor.action.clipboardCopyAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+.",
        "command": "editor.action.clipboardCutAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+p",
        "command": "editor.action.clipboardPasteAction",
        "when": "editorTextFocus && !editorReadonly"
    },

    // switching editors

    {
        "key": "alt+j",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "alt+q",
        "command": "workbench.action.previousEditor"
    },

    // suggest

    {
        "key": "alt+h",
        "command": "selectNextSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
        "key": "alt+t",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },

    // quickOpen

    {
        "key": "alt+h",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "alt+t",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+m",
        "command": "workbench.action.acceptSelectedQuickOpenItem",
        "when": "inQuickOpen"
      },

      {
        "key": "ctrl+m",
        "command": "type",
        "args": {
            "text": "\n"
        },
        "when": "editorTextFocus"
    },
    {
        "key": "alt+s",
        "command": "workbench.action.files.save"
    },
    {
        "key": "ctrl+m",
        "command": "acceptSelectedSuggestionOnEnter",
        "when": "acceptSuggestionOnEnter && editorTextFocus && suggestWidgetVisible && suggestionMakesTextEdit"
    },
    {
        "key": "ctrl+m",
        "command": "list.select",
        "when": "listFocus && !inputFocus"
    },
    {
       "key": "alt+m",
       "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+=",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "ctrl+/",
        "command": "undo",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+s",
        "command": "actions.find"
    },
    {
        "key": "ctrl+s",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorFocus && findWidgetVisible"
    }
    // ctrl+g
    {
        "key": "ctrl+g",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    }
]
